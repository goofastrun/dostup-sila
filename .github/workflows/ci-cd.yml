name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        
    - name: Build and test
      run: |
        docker-compose build
        docker-compose up -d
        docker-compose ps
        sleep 30  # Даем время на запуск контейнеров
        docker-compose logs
        
        # Проверка доступности сервисов
        echo "Checking if Frontend is accessible..."
        curl -f http://localhost:8080 || exit 1
        
        echo "Checking if Backend API is accessible..."
        curl -f http://localhost:3000/health || exit 1
        
        echo "Checking database connection..."
        docker-compose exec -T backend node -e "
          const { pool } = require('./db/init');
          pool.query('SELECT NOW()', (err, res) => {
            if (err) {
              console.error('Database connection failed:', err);
              process.exit(1);
            }
            console.log('Database connection successful');
            process.exit(0);
          });
        "
        
        echo "Checking Redis connection..."
        docker-compose exec -T redis redis-cli ping || exit 1
        
    - name: Run Backend Tests
      run: |
        docker-compose exec -T backend npm test || exit 1
        
    - name: Build and push Frontend
      uses: docker/build-push-action@v4
      with:
        context: .
        file: Dockerfile.frontend
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/access-control-frontend:latest
        
    - name: Build and push Backend
      uses: docker/build-push-action@v4
      with:
        context: .
        file: Dockerfile.backend
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/access-control-backend:latest

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to production server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        script: |
          cd /opt/access-control
          docker-compose pull
          docker-compose up -d --force-recreate
          
          # Проверка после деплоя
          echo "Waiting for services to start..."
          sleep 30
          
          # Проверка доступности после деплоя
          curl -f http://localhost:8080 || exit 1
          curl -f http://localhost:3000/health || exit 1
          
          docker system prune -f